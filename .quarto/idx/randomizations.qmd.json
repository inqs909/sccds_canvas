{"title":"Randomization (Permutations) Tests","markdown":{"yaml":{"title":"Randomization (Permutations) Tests","date-modified":"2025-01-07"},"headingText":"Permutation Tests","containsRefs":false,"markdown":"\n\n\nRandomization tests, also known as permutation tests, are used to test whether any patterns are generated randomly or not; especially in testing differences in groups of populations. The idea is that the main null hypothesis of interest is whether the mean populations are the same, or at least one of them is different. Meaning if the recorded values needed to be assigned to a group, they will either be assigned randomly to a group or follow a specific pattern. \n\nA randomization test will randomly assign the recorded values to a group, which is similar to believing that the null hypothesis is true, to create a pseudo data set and ultimately a test statistic to determine a change. This pseudo data set is a permutation of how the recorded values can be arranged. If we repeat this process, different permutations of how the data can be arranged will appear. Computing the test statistic for each permuted data set will result into a distribution. This is the distribution of test statistics assuming that the recorded values are randomly assigned to a group. We can observe where our real test statistic lies to see if it is common or rare (i.e. in the tail region).\n\n**R Packages and Functions Used**\n\n```{r}\n#| code-fold: false\n\nlibrary(tidyverse) # Loading Helper Functions from Tidyverse\nlibrary(palmerpenguins)\n\ntheme_set(theme_bw()) # Setting theme for plots\ntheme_update(axis.title = element_text(size = 24))\n\n\nshuffle <- function(x){ # Constructing a function to shuffle a vector\n  n <- length(x)\n  return(sample(x, n))\n}\n\npenguins <- penguins |> drop_na() # Remove all the missing values\n\n```\n\n\n\nPermutation tests conducts a statistical test by constructing the null distribution by rearranging the data points in a sample. We are testing the following hypothesis:\n\n1. Null hypothesis states that the rearrangements of the data points **are** random.\n\n2. Alternative hypothesis states that the rearrangement of the data points **aren't** random.\n\n## Permutation Distributions\n\nLet $Z^{(*)}= \\{X_{i}, Y_{i}\\}$, for $i = 1, \\ldots n$ be the observed data generated from a study, where $X_i$ is a numerical value and $Y_i = j$, for $j = 1 \\ldots J$, indicating the $j\\mathrm{th}$ group the $i\\mathrm{th}$ data point belongs to. Suppose $Z^{(k)} = \\{X_{i^*(i)}, Y_{i}\\}$, for $i^* = 1, \\ldots n$, is a permutation of the observed data point where the values of $X_i$ are rearranged, while keeping $Y_i$ fixed. The probability of observing $Z^{(k)}$ is $1/n!$. Therefore, for any statistic $T(Z^{(k)})$, a sampling distribution can be constructed by using all the different permutations ($n!$). A p-value can be constructed by determining the proportion of $T(Z^{(k)})\\mathrm{'s}$ that are more extreme values than $T(Z^{(*)})$, the sample statistic generated from the observed data.\n\n## Approximate Permutation Distribution\n\nConstructing the distribution for the permutations can be challenging if the number of permutations is high! If $n=100$, the number of permutations is $100!$:\n\n```{r}\n#| code-fold: false\n#| echo: true\nfactorial(100)\n```\n\nTherefore, simulation techniques are needed to approximate the p-value. By randomly drawing from the sample, we can approximate the p-value.\n\n\n### Algorithm\n\n1.    Construct a new data set\n  1.    Fix the predictor ($Y$) variable and randomly assign a data point $X$\n2.    Compute a test statistic using the new data set and store the value\n3.    Repeat steps 1 and 2 for $N$ times\n4.    Compute the test statistic from the empirical sample (un-permutated)\n5.    Count how many permutated statistics that are more extreme than the sample test statistic ($m$)\n6.    Compute the Monte Carlo p-value\n\n$$\np = \\frac{m +1}{N + 1}\n$$\n\n## Example: Penguins Data\n\nWe want to determine if the body mass of different penguins is affected by the species of the penguins: Adelie, Gentoo, and Species. Creating a jitter and box plot, we can see that theres is a difference between the species:\n\n```{r}\n#| code-fold: true\npenguins |> ggplot(aes(x=species, y = body_mass_g)) +\n  geom_boxplot() +\n  geom_jitter() +\n  labs(x = \"Species\", y = \"Body Mass\")\n\n```\n\nBoth Adelie and Chinstrap species have relatively the same body mass, but Gentoo have a higher body mass. The question is if the difference is due to a species effect, or simply randomness. We can conduct the following hypoteses:\n\n::: {.columns}\n::: {.column}\n$$\nH_0:\\ \\mu_{\\mathrm{adelie}} = \\mu_{\\mathrm{gentoo}} = \\mu_{\\mathrm{chinstrap}} \n$$\n:::\n::: {.column}\n$$\nH_a:\\ \\mathrm{At\\ least\\ one\\ pairing\\ is\\ different.}\n$$\n:::\n:::\n\nWe can conduct a permutation (randomization) test determine if the null hypothesis is correct or not. By randomly shuffling body mass into different species, we can begin to see how body mass will behave if the null hypothesis is true. Below is a jitter plot displaying a permutated data points (black) against the real data points (red):\n\n\n```{r}\n#| code-fold: true\npenguins |> ggplot(aes(x = species, y = body_mass_g)) +\n  labs(x = \"Species\", y = \"Body Mass\") + \n  geom_jitter(col = \"red\") +\n  geom_jitter(aes(species, shuffle(body_mass_g)))\n\n```\n\n\nIf we repeated this process, we can generally see how multiple permutated data sets (10) behave against the real data points:\n\n```{r}\n#| code-fold: true\npenguins |> ggplot(aes(x = species, y = body_mass_g)) +\n  labs(x = \"Species\", y = \"Body Mass\") + \n  geom_jitter(aes(species, shuffle(body_mass_g))) +\n  geom_jitter(aes(species, shuffle(body_mass_g))) +\n  geom_jitter(aes(species, shuffle(body_mass_g))) +\n  geom_jitter(aes(species, shuffle(body_mass_g))) +\n  geom_jitter(aes(species, shuffle(body_mass_g))) +\n  geom_jitter(aes(species, shuffle(body_mass_g))) +\n  geom_jitter(aes(species, shuffle(body_mass_g))) +\n  geom_jitter(aes(species, shuffle(body_mass_g))) +\n  geom_jitter(aes(species, shuffle(body_mass_g))) +\n  geom_jitter(aes(species, shuffle(body_mass_g))) +\n  geom_jitter(col = \"red\") \n```\n\nThe plot demonstrates that the real data is different from the permutated data. This supports the idea that species may have an effect on body mass. However, we need more permutated data sets to safely conclude this.\n\n### ANOVA\n\nInstead of making conclusions from 10 data sets, we will need to simulate much more data sets. It will be easier to use a test statistic and determine its distribution. The best statistic to use is the $F$-statistic from the Analysis of Variance (ANOVA) table since it quantifies the variation among and between the groups. We can obtain the statistic with the following R code:\n\n```{r}\npenguins |> \n  aov(body_mass_g ~ species, data = _) |> \n  anova() |> \n  _$`F value`[1]\n```\n\n### Permutation Test\n\nFirst, we will generate the $F$-statistic from the real data set.\n\n```{r}\nf_stat <- penguins |> \n  aov(body_mass_g ~ species, data = _) |> \n  anova() |> \n  _$`F value`[1]\n```\n\nAfterward, create a function the will shuffle body mass, fit an ANOVA, and extract the $F$-statistic:\n\n```{r}\nf_sim <- function(i){\n  ff <- penguins |> \n    aov(shuffle(body_mass_g) ~ species, data = _) |> \n    anova() |> \n    _$`F value`[1]\n  return(ff)\n}\n```\n\nConstruct the distribution of $F$-statistic based on the null hypothesis with the `replicate` function:\n\n```{r}\nf_dist <- replicate(1000, f_sim(1))\n```\n\n\nPlot a density plot based on the null distribution, with a vertical line indicating the real $F$-statistic:\n```{r}\ntibble(x= f_dist) |> \n  ggplot(aes(x, y = ..density..)) +\n  geom_histogram() +\n  geom_vline(xintercept = f_stat, col = \"red\")\n\n```\n\nWe can see that red line is clearly far away from the null distirbution. Therefore, body mass is affeced by species of penguin. We can compute the p-value with the following code:\n\n```{r}\n\nsum(f_stat < f_dist) + 1 / (length(f_dist) + 1)\n```\n\nThe probability of observing this data set is extremely small if the null hypothesis it true. ","srcMarkdownNoYaml":"\n\n\nRandomization tests, also known as permutation tests, are used to test whether any patterns are generated randomly or not; especially in testing differences in groups of populations. The idea is that the main null hypothesis of interest is whether the mean populations are the same, or at least one of them is different. Meaning if the recorded values needed to be assigned to a group, they will either be assigned randomly to a group or follow a specific pattern. \n\nA randomization test will randomly assign the recorded values to a group, which is similar to believing that the null hypothesis is true, to create a pseudo data set and ultimately a test statistic to determine a change. This pseudo data set is a permutation of how the recorded values can be arranged. If we repeat this process, different permutations of how the data can be arranged will appear. Computing the test statistic for each permuted data set will result into a distribution. This is the distribution of test statistics assuming that the recorded values are randomly assigned to a group. We can observe where our real test statistic lies to see if it is common or rare (i.e. in the tail region).\n\n**R Packages and Functions Used**\n\n```{r}\n#| code-fold: false\n\nlibrary(tidyverse) # Loading Helper Functions from Tidyverse\nlibrary(palmerpenguins)\n\ntheme_set(theme_bw()) # Setting theme for plots\ntheme_update(axis.title = element_text(size = 24))\n\n\nshuffle <- function(x){ # Constructing a function to shuffle a vector\n  n <- length(x)\n  return(sample(x, n))\n}\n\npenguins <- penguins |> drop_na() # Remove all the missing values\n\n```\n\n\n## Permutation Tests\n\nPermutation tests conducts a statistical test by constructing the null distribution by rearranging the data points in a sample. We are testing the following hypothesis:\n\n1. Null hypothesis states that the rearrangements of the data points **are** random.\n\n2. Alternative hypothesis states that the rearrangement of the data points **aren't** random.\n\n## Permutation Distributions\n\nLet $Z^{(*)}= \\{X_{i}, Y_{i}\\}$, for $i = 1, \\ldots n$ be the observed data generated from a study, where $X_i$ is a numerical value and $Y_i = j$, for $j = 1 \\ldots J$, indicating the $j\\mathrm{th}$ group the $i\\mathrm{th}$ data point belongs to. Suppose $Z^{(k)} = \\{X_{i^*(i)}, Y_{i}\\}$, for $i^* = 1, \\ldots n$, is a permutation of the observed data point where the values of $X_i$ are rearranged, while keeping $Y_i$ fixed. The probability of observing $Z^{(k)}$ is $1/n!$. Therefore, for any statistic $T(Z^{(k)})$, a sampling distribution can be constructed by using all the different permutations ($n!$). A p-value can be constructed by determining the proportion of $T(Z^{(k)})\\mathrm{'s}$ that are more extreme values than $T(Z^{(*)})$, the sample statistic generated from the observed data.\n\n## Approximate Permutation Distribution\n\nConstructing the distribution for the permutations can be challenging if the number of permutations is high! If $n=100$, the number of permutations is $100!$:\n\n```{r}\n#| code-fold: false\n#| echo: true\nfactorial(100)\n```\n\nTherefore, simulation techniques are needed to approximate the p-value. By randomly drawing from the sample, we can approximate the p-value.\n\n\n### Algorithm\n\n1.    Construct a new data set\n  1.    Fix the predictor ($Y$) variable and randomly assign a data point $X$\n2.    Compute a test statistic using the new data set and store the value\n3.    Repeat steps 1 and 2 for $N$ times\n4.    Compute the test statistic from the empirical sample (un-permutated)\n5.    Count how many permutated statistics that are more extreme than the sample test statistic ($m$)\n6.    Compute the Monte Carlo p-value\n\n$$\np = \\frac{m +1}{N + 1}\n$$\n\n## Example: Penguins Data\n\nWe want to determine if the body mass of different penguins is affected by the species of the penguins: Adelie, Gentoo, and Species. Creating a jitter and box plot, we can see that theres is a difference between the species:\n\n```{r}\n#| code-fold: true\npenguins |> ggplot(aes(x=species, y = body_mass_g)) +\n  geom_boxplot() +\n  geom_jitter() +\n  labs(x = \"Species\", y = \"Body Mass\")\n\n```\n\nBoth Adelie and Chinstrap species have relatively the same body mass, but Gentoo have a higher body mass. The question is if the difference is due to a species effect, or simply randomness. We can conduct the following hypoteses:\n\n::: {.columns}\n::: {.column}\n$$\nH_0:\\ \\mu_{\\mathrm{adelie}} = \\mu_{\\mathrm{gentoo}} = \\mu_{\\mathrm{chinstrap}} \n$$\n:::\n::: {.column}\n$$\nH_a:\\ \\mathrm{At\\ least\\ one\\ pairing\\ is\\ different.}\n$$\n:::\n:::\n\nWe can conduct a permutation (randomization) test determine if the null hypothesis is correct or not. By randomly shuffling body mass into different species, we can begin to see how body mass will behave if the null hypothesis is true. Below is a jitter plot displaying a permutated data points (black) against the real data points (red):\n\n\n```{r}\n#| code-fold: true\npenguins |> ggplot(aes(x = species, y = body_mass_g)) +\n  labs(x = \"Species\", y = \"Body Mass\") + \n  geom_jitter(col = \"red\") +\n  geom_jitter(aes(species, shuffle(body_mass_g)))\n\n```\n\n\nIf we repeated this process, we can generally see how multiple permutated data sets (10) behave against the real data points:\n\n```{r}\n#| code-fold: true\npenguins |> ggplot(aes(x = species, y = body_mass_g)) +\n  labs(x = \"Species\", y = \"Body Mass\") + \n  geom_jitter(aes(species, shuffle(body_mass_g))) +\n  geom_jitter(aes(species, shuffle(body_mass_g))) +\n  geom_jitter(aes(species, shuffle(body_mass_g))) +\n  geom_jitter(aes(species, shuffle(body_mass_g))) +\n  geom_jitter(aes(species, shuffle(body_mass_g))) +\n  geom_jitter(aes(species, shuffle(body_mass_g))) +\n  geom_jitter(aes(species, shuffle(body_mass_g))) +\n  geom_jitter(aes(species, shuffle(body_mass_g))) +\n  geom_jitter(aes(species, shuffle(body_mass_g))) +\n  geom_jitter(aes(species, shuffle(body_mass_g))) +\n  geom_jitter(col = \"red\") \n```\n\nThe plot demonstrates that the real data is different from the permutated data. This supports the idea that species may have an effect on body mass. However, we need more permutated data sets to safely conclude this.\n\n### ANOVA\n\nInstead of making conclusions from 10 data sets, we will need to simulate much more data sets. It will be easier to use a test statistic and determine its distribution. The best statistic to use is the $F$-statistic from the Analysis of Variance (ANOVA) table since it quantifies the variation among and between the groups. We can obtain the statistic with the following R code:\n\n```{r}\npenguins |> \n  aov(body_mass_g ~ species, data = _) |> \n  anova() |> \n  _$`F value`[1]\n```\n\n### Permutation Test\n\nFirst, we will generate the $F$-statistic from the real data set.\n\n```{r}\nf_stat <- penguins |> \n  aov(body_mass_g ~ species, data = _) |> \n  anova() |> \n  _$`F value`[1]\n```\n\nAfterward, create a function the will shuffle body mass, fit an ANOVA, and extract the $F$-statistic:\n\n```{r}\nf_sim <- function(i){\n  ff <- penguins |> \n    aov(shuffle(body_mass_g) ~ species, data = _) |> \n    anova() |> \n    _$`F value`[1]\n  return(ff)\n}\n```\n\nConstruct the distribution of $F$-statistic based on the null hypothesis with the `replicate` function:\n\n```{r}\nf_dist <- replicate(1000, f_sim(1))\n```\n\n\nPlot a density plot based on the null distribution, with a vertical line indicating the real $F$-statistic:\n```{r}\ntibble(x= f_dist) |> \n  ggplot(aes(x, y = ..density..)) +\n  geom_histogram() +\n  geom_vline(xintercept = f_stat, col = \"red\")\n\n```\n\nWe can see that red line is clearly far away from the null distirbution. Therefore, body mass is affeced by species of penguin. We can compute the p-value with the following code:\n\n```{r}\n\nsum(f_stat < f_dist) + 1 / (length(f_dist) + 1)\n```\n\nThe probability of observing this data set is extremely small if the null hypothesis it true. "},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"paged","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"randomizations.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.31","editor":"source","knitr":{"opts_chunk":{"message":false,"warnings":false,"comment":"#>"}},"theme":"cosmo","title":"Randomization (Permutations) Tests","date-modified":"2025-01-07"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}